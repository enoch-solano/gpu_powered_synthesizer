# This file was generated by Jucer2Reprojucer from "AddTard.jucer"

cmake_minimum_required(VERSION 3.4)

project("AddTard")


list(APPEND CMAKE_MODULE_PATH "/home/mason/FRUT/prefix/FRUT/cmake")
include(Reprojucer)
# CUDA
list(APPEND CUDA_NVCC_FLAGS_DEBUG -G -g)
list(APPEND CUDA_NVCC_FLAGS_RELWITHDEBUGINFO -lineinfo)

# Crucial magic for CUDA linking
find_package(Threads REQUIRED)
enable_language(CUDA)
include_directories(Source)

set(CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE ON)
set(CUDA_SEPARABLE_COMPILATION ON)

if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    set(CUDA_PROPAGATE_HOST_FLAGS OFF)
endif()

include_directories(${CUDA_TOOLKIT_ROOT_DIR}/lib64)
find_library(CUDA_LIB cudart PATHS ${CMAKE_IMPLICIT_LINK_DIRECTORIES})
find_library(CUDA_LIB cuda PATHS ${CMAKE_IMPLICIT_LINK_DIRECTORIES})

add_subdirectory(Source/kernel)
set(AddTard_jucer_FILE
  "${CMAKE_CURRENT_LIST_DIR}/AddTard.jucer"
)

link_directories(${CUDA_TOOLKIT_ROOT_DIR}/include)
link_directories(${CUDA_TOOLKIT_ROOT_DIR}/lib64)
set(JUCE_MODULES_GLOBAL_PATH "/home/mason/JUCE/modules")
find_library(CUDART_LIBRARY cudart ${CMAKE_CUDA_IMPLICIT_LINK_DIRECTORIES})
#find_package(CUDAToolkit)
jucer_project_begin(
  JUCER_VERSION "5.4.7"
  PROJECT_FILE "${AddTard_jucer_FILE}"
  PROJECT_ID "Oy63ws"
)

jucer_project_settings(
  PROJECT_NAME "AddTard"
  PROJECT_VERSION "1.0.0"
  REPORT_JUCE_APP_USAGE ON # Required for closed source applications without an Indie or Pro JUCE license
  DISPLAY_THE_JUCE_SPLASH_SCREEN ON # Required for closed source applications without an Indie or Pro JUCE license
  PROJECT_TYPE "GUI Application"
  BUNDLE_IDENTIFIER "com.yourcompany.AddTard"
  CXX_LANGUAGE_STANDARD "C++14"
)
set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} -arch sm_53")

jucer_project_files("AddTard/Source"
# Compile   Xcode     Binary    File
#           Resource  Resource
  .         .         .         "Source/MainComponent.h"
  x         .         .         "Source/MainComponent.cpp"
  x         .         .         "Source/Main.cpp"
  x         .         .         "Source/engine.cpp"
  x         .         .         "Source/engine.h"
  x         .         .         "Source/Gui.cpp"
  x         .         .         "Source/Gui.h"
  x         .         .         "Source/Display.cpp"
  x         .         .         "Source/Display.h"
  x         .         .         "Source/SynthADSR.h"
  x         .         .         "Source/SynthADSR.cpp"
  x         .         .         "Source/lfo.h"
  x         .         .         "Source/lfo.cpp"
)

jucer_project_module(
  juce_audio_basics
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
)

jucer_project_module(
  juce_audio_devices
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_USE_WINRT_MIDI
  # JUCE_ASIO
  # JUCE_WASAPI
  # JUCE_WASAPI_EXCLUSIVE
  # JUCE_DIRECTSOUND
  # JUCE_ALSA
  # JUCE_JACK
  # JUCE_BELA
  # JUCE_USE_ANDROID_OBOE
  # JUCE_USE_ANDROID_OPENSLES
  # JUCE_DISABLE_AUDIO_MIXING_WITH_OTHER_APPS
)

jucer_project_module(
  juce_audio_formats
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_USE_FLAC
  # JUCE_USE_OGGVORBIS
  # JUCE_USE_MP3AUDIOFORMAT
  # JUCE_USE_LAME_AUDIO_FORMAT
  # JUCE_USE_WINDOWS_MEDIA_FORMAT
)

jucer_project_module(
  juce_audio_processors
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_PLUGINHOST_VST
  # JUCE_PLUGINHOST_VST3
  # JUCE_PLUGINHOST_AU
  # JUCE_PLUGINHOST_LADSPA
)

jucer_project_module(
  juce_audio_utils
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_USE_CDREADER
  # JUCE_USE_CDBURNER
)

jucer_project_module(
  juce_core
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_FORCE_DEBUG
  # JUCE_LOG_ASSERTIONS
  # JUCE_CHECK_MEMORY_LEAKS
  # JUCE_DONT_AUTOLINK_TO_WIN32_LIBRARIES
  # JUCE_INCLUDE_ZLIB_CODE
  # JUCE_USE_CURL
  # JUCE_LOAD_CURL_SYMBOLS_LAZILY
  # JUCE_CATCH_UNHANDLED_EXCEPTIONS
  # JUCE_ALLOW_STATIC_NULL_VARIABLES
  JUCE_STRICT_REFCOUNTEDPOINTER ON
)

jucer_project_module(
  juce_cryptography
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
)

jucer_project_module(
  juce_data_structures
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
)

jucer_project_module(
  juce_events
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_EXECUTE_APP_SUSPEND_ON_BACKGROUND_TASK
)

jucer_project_module(
  juce_graphics
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_USE_COREIMAGE_LOADER
  # JUCE_USE_DIRECTWRITE
  # JUCE_DISABLE_COREGRAPHICS_FONT_SMOOTHING
)

jucer_project_module(
  juce_gui_basics
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_ENABLE_REPAINT_DEBUGGING
  # JUCE_USE_XRANDR
  # JUCE_USE_XINERAMA
  # JUCE_USE_XSHM
  # JUCE_USE_XRENDER
  # JUCE_USE_XCURSOR
  # JUCE_WIN_PER_MONITOR_DPI_AWARE
)

jucer_project_module(
  juce_gui_extra
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
  # JUCE_WEB_BROWSER
  # JUCE_ENABLE_LIVE_CONSTANT_EDITOR
)

jucer_project_module(
  juce_opengl
  PATH "${JUCE_MODULES_GLOBAL_PATH}"
)

jucer_export_target(
  "Linux Makefile"
  EXTERNAL_LIBRARIES_TO_LINK "kernel"
)

jucer_export_target_configuration(
  "Linux Makefile"
  NAME "Debug"
  DEBUG_MODE ON
)

jucer_export_target_configuration(
  "Linux Makefile"
  NAME "Release"
  DEBUG_MODE OFF
)

jucer_project_end()
